syntax = "proto3";

package monetachain.tokenfactory;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "monetachain/tokenfactory/params.proto";
import "monetachain/tokenfactory/denom.proto";

option go_package = "monetachain/x/tokenfactory/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams      (MsgUpdateParams     ) returns (MsgUpdateParamsResponse     );
  rpc CreateDenom       (MsgCreateDenom      ) returns (MsgCreateDenomResponse      );
  rpc UpdateDenom       (MsgUpdateDenom      ) returns (MsgUpdateDenomResponse      );
  rpc MintAndSendTokens (MsgMintAndSendTokens) returns (MsgMintAndSendTokensResponse);
  rpc UpdateOwner       (MsgUpdateOwner      ) returns (MsgUpdateOwnerResponse      );
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                                  "authority";
  option           (amino.name) = "monetachain/x/tokenfactory/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreateDenom {
  option (cosmos.msg.v1.signer) = "owner";
  string owner              = 1;
  string denom              = 2;
  string description        = 3;
  string ticker             = 4;
  int32  precision          = 5;
  string url                = 6;
  string maxSupply = 7 [
    (cosmos_proto.scalar)  = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];
  bool   canChangeMaxSupply = 8;
}

message MsgCreateDenomResponse {}

message MsgUpdateDenom {
  option (cosmos.msg.v1.signer) = "owner";
  string owner              = 1;
  string denom              = 2;
  string description        = 3;
  string url                = 4;
  string maxSupply = 5 [
    (cosmos_proto.scalar)  = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];
  bool   canChangeMaxSupply = 6;
}

message MsgUpdateDenomResponse {}

message MsgMintAndSendTokens {
  option (cosmos.msg.v1.signer) = "owner";
  string owner     = 1;
  string denom     = 2;
  string amount = 3 [
    (cosmos_proto.scalar)  = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];
  string recipient = 4;
}

message MsgMintAndSendTokensResponse {}

message MsgUpdateOwner {
  option (cosmos.msg.v1.signer) = "owner";
  string owner    = 1;
  string denom    = 2;
  string newOwner = 3;
}

message MsgUpdateOwnerResponse {}

